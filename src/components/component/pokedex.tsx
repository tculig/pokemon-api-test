/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/2LyAaSq3oRh
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Archivo } from 'next/font/google'
import { DM_Sans } from 'next/font/google'

archivo({
  subsets: ['latin'],
  display: 'swap',
})

dm_sans({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

import Link from "next/link"
import { useCallback, type JSX, type SVGProps } from "react"
import { pokemonTypes, type Pokemon } from "types/pokemon"
import Image from "next/image";
import { isValidPokemonType, zeroPad } from "utils";
import { BellElectricIcon, BugIcon, FlameIcon, GlassWaterIcon, GrapeIcon } from "lucide-react";
import { Tooltip } from 'react-tooltip'
import { TypeIcon } from "components/ui/type-icon";

interface Props {
  data: Pokemon[],
  isFetching: boolean
}

export const Pokedex = ({ data, isFetching }: Props) => {

  const generateItem = useCallback((pokemon: Pokemon, index: number) => {
    return (
      <div className="bg-white rounded-lg shadow-md overflow-hidden">
        <div className="relative justify-center items-center flex pt-4">
          {pokemon.details?.sprites.front_default ? (
            <Image
              src={pokemon.details?.sprites.front_default}
              alt={pokemon.name}
              width={200}
              height={200}
              className="h-48"
            />) : null}
          <div className="absolute top-2 left-2 bg-[#e3350d] text-white font-bold px-3 py-1 rounded-full text-xs">
            #{zeroPad(index, 3)}
          </div>
        </div>
        <div className="px-4 pb-4">
          <h3 className="text-lg font-bold text-gray-800 mb-2">{pokemon.name}</h3>
          <div className="flex justify-between items-center">
            <div className="flex items-center space-x-2">
            {pokemon.details?.types.map(
            (typeInfo) => typeInfo.type.name).map(
              (type, index) => <TypeIcon type={isValidPokemonType(type) ? type : "normal"} key={index} />
            )}
             </div>
            <Link
              href="#"
              className="bg-[#e3350d] text-white font-bold py-2 px-4 rounded-full text-sm hover:bg-[#c02b0a] transition-colors"
              prefetch={false}
            >
              View Details
            </Link>
          </div>
        </div>
      </div>
    )
  }, []);

  return (
    <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
      {data.map((res, index) => generateItem(res, index))}
      {pokemonTypes.map(type=><Tooltip id={`tooltip-type-${type}`} key={type}/>)}

    </div>
  )
}





